#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        sea: sea {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "SEA";
        };

        win: win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp ENTER>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_ALT>;

            label = "WIN";
        };
    };

    behaviors {
        td: td {
            compatible = "zmk,behavior-tap-dance";
            label = "TD";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&kp RIGHT_SHIFT>, <&kp RCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E             &kp R             &kp T        &kp Y      &kp U         &kp I          &kp O    &kp P     &kp LBKT
&kp LSHIFT  &kp A  &kp S  &kp D             &kp F             &kp G        &kp H      &kp J         &kp K          &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LCTRL   &kp Z  &kp X  &kp C             &kp V             &kp B        &kp N      &kp M         &kp COMMA      &kp DOT  &kp FSLH  &td
                          &kp LEFT_COMMAND  &lt 1 LEFT_SHIFT  &lt LWR RET  &kp SPACE  &lt 2 RSHIFT  &kp BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp ESCAPE  &kp F1  &kp F2  &kp F4  &kp F5  &kp F6  &kp F7    &kp F8    &kp F9  &kp F10    &kp F11   &kp F12
&trans      &none   &none   &none   &sea    &win    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp RPAR  &mt RCTRL MINUS
&trans      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp RALT
                            &trans  &trans  &trans  &trans    &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&kt ESCAPE  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR    &kp PERCENT   &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LPAR  &kp RPAR  &kp NON_US_BACKSLASH
&trans      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LBKT  &kp RBKT  &kp PIPE
&trans      &kp NUMBER_6     &kp N7        &kp N8        &kp N9        &kp N0        &kp UNDERSCORE  &kp PLUS       &kp TILDE     &kp LBRC  &kp RBRC  &trans
                                           &trans        &trans        &trans        &trans          &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &bl BL_DEC         &bl BL_INC         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &kp K_VOLUME_DOWN  &kp K_VOLUME_DOWN  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none              &none              &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans             &trans
            >;
        };
    };
};
